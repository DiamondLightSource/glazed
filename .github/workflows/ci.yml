name: Glazed CI

on:
  push:
    branches:
      - main
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
          toolchain: nightly
          components: rustfmt
    - name: Check formatting
      # Use nightly for formatting to enable unstable formatting styles
      # * group imports
      # * import_granularity
      run: cargo +nightly fmt -- --check

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
          toolchain: stable
          components: clippy
    - uses: Swatinem/rust-cache@v2
    - name: Clippy
      run: |
        cargo --version
        cargo clippy --version
        cargo clippy --all-targets --all-features -- --deny warnings

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
          toolchain: stable
    - uses: Swatinem/rust-cache@v2

    - name: Build Everything
      run: cargo build --all-targets
    - name: Run tests
      run: cargo test --all-targets --verbose
    # Ensure that no files (most likely the Cargo.lock file) have changed
    - name: Unstaged Changes
      run: git diff --exit-code

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Generate Metadata
        id: meta
        uses: docker/metadata-action@v5 
        with:
          images: ghcr.io/${{ github.repository }}
      
      # - name: Build image
      #   uses: docker/build-push-actions@v6
      
      - name: Log in to GHCR
        # if: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish image
        uses: docker/build-push-action@v6
        env:
          DOCKER_BUILD_RECORD_UPLOAD: false
        with:
          # push: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
